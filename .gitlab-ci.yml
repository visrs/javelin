image: "debian:stretch-slim"


stages:
  - prepare
  - build
  - test
  - publish

variables:
  RUSTUP_HOME: "$CI_PROJECT_DIR/.rustup"
  CARGO_HOME: "$CI_PROJECT_DIR/.cargo"
  RUST_STABLE_VERSION: "1.37.0"


.write_cache:
  cache:
    key: "$CI_COMMIT_REF_SLUG-rustup"
    paths:
      - .rustup
      - .cargo

.read_cache:
  cache:
    key: "$CI_COMMIT_REF_SLUG-rustup"
    paths:
      - .rustup
      - .cargo
    policy: pull

.toolchain-stable:
  extends: .read_cache
  before_script:
    - apt-get update
    - apt-get install -y --no-install-recommends ca-certificates libssl-dev libc6-dev pkg-config gcc
    - export PATH="$CARGO_HOME/bin:$PATH"
    - rustup default stable

.toolchain-nightly:
  extends: .read_cache
  allow_failure: true
  before_script:
    - apt-get update
    - apt-get install -y --no-install-recommends ca-certificates libssl-dev libc6-dev pkg-config gcc
    - export PATH="$CARGO_HOME/bin:$PATH"
    - rustup default nightly

.source-files: &source-files
  - "Cargo.toml"
  - "Cargo.lock"
  - "src/**/*.rs"


####### Jobs #######

install:
  extends: .write_cache
  stage: prepare
  script:
    - apt-get update && apt-get install -y --no-install-recommends ca-certificates curl
    - curl https://sh.rustup.rs | sh -s -- -y --default-host x86_64-unknown-linux-gnu
    - export PATH="$CARGO_HOME/bin:$PATH"
    - rustup install "$RUST_STABLE_VERSION" nightly
    - rustup component add clippy


build:stable:default-features:
  extends: .toolchain-stable
  stage: build
  script:
    - cargo build --quiet
  only:
    changes: *source-files

build:stable:no-default-features:
  extends: .toolchain-stable
  stage: build
  script:
    - cargo build --quiet --no-default-features
  only:
    changes: *source-files

build:stable:web-only:
  extends: .toolchain-stable
  stage: build
  script:
    - cargo build --quiet --no-default-features --features "web"
  only:
    changes: *source-files

build:stable:hls-only:
  extends: .toolchain-stable
  stage: build
  script:
    - cargo build --quiet --no-default-features --features "hls"
  only:
    changes: *source-files

build:stable:tls-only:
  extends: .toolchain-stable
  stage: build
  script:
    - cargo build --quiet --no-default-features --features "tls"
  only:
    changes: *source-files

build:nightly:default-features:
  extends: .toolchain-nightly
  stage: build
  script:
    - cargo build --quiet
  only:
    changes: *source-files


test:stable:clippy:
  extends: .toolchain-stable
  stage: test
  allow_failure: true
  script:
    - cargo clippy
  only:
    changes:
      - src/**/*.rs

test:stable:all:
  extends: .toolchain-stable
  stage: test
  script:
    - cargo test --quiet --tests --all
  only:
    changes: *source-files


deploy:crates-io:
  extends: .toolchain-stable
  stage: publish
  script:
    - ./scripts/publish.sh --token $CRATES_IO_API_TOKEN
  only:
    - tags@valeth/javelin
